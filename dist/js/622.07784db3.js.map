{"version":3,"file":"js/622.07784db3.js","mappings":"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","sources":["webpack://vue3_springboot/./src/components/online.tsx","webpack://vue3_springboot/./src/components/Home.tsx"],"sourcesContent":["import { defineComponent, reactive } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport \"../css/online.css\"\r\ntype user={\r\n    username: string\r\n}\r\nexport default defineComponent({\r\n    setup() {\r\n        const store = useStore()\r\n        const info = reactive({\r\n            username: store.state.username,\r\n            circleUrl: 'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png',\r\n            user: {},\r\n            isCollapse: false,\r\n            users: [\r\n                {\r\n                    username: ''\r\n                }\r\n            ],\r\n            chatUser: '',\r\n            text: \"\",\r\n            messages: [],\r\n            content: [\r\n                {\r\n                    message: '',\r\n                    class: ''\r\n                },\r\n            ]\r\n        })\r\n        function createContent(remoteUser: string, nowUser: string, text: string) {  // 这个方法是用来将 json的聊天消息数据转换成 html的。\r\n            // 当前用户消息\r\n            let html = {\r\n                message: '',\r\n                class: 'green_message',\r\n            }\r\n            if (nowUser) { // nowUser 表示是否显示当前用户发送的聊天消息，绿色气泡\r\n                html = {\r\n                    message: text,\r\n                    class: 'green_message',\r\n                }\r\n\r\n                info.content = [...info.content, html]\r\n                console.log(info.content)\r\n            } else if (remoteUser) {   // remoteUser表示远程用户聊天消息，蓝色的气泡\r\n                html = {\r\n                    message: text,\r\n                    class: 'blue_message',\r\n                }\r\n                info.content = [...info.content, html]\r\n                console.log(info.content)\r\n            }\r\n            console.log(html)\r\n        }\r\n        let socketUrl = `ws://47.101.203.157/imserver/${info.username}`\r\n        const socket = new WebSocket(socketUrl);\r\n        const init = () => {\r\n            socket.onopen = function () {\r\n                console.log(\"websocket已打开\")\r\n            }\r\n            socket.onmessage = function (msg) {\r\n                console.log(\"收到数据====\" + msg.data)\r\n                // 对收到的json数据进行解析， 类似这样的： {\"users\": [{\"username\": \"zhang\"},{ \"username\": \"admin\"}]}\r\n                let data = JSON.parse(msg.data)\r\n                if (data.users) {  // 获取在线人员信息\r\n                    info.users = data.users\r\n                } else {\r\n                    if (data.from === info.chatUser) {\r\n                        info.messages.push(data)\r\n                        createContent(data.from, null, data.text)\r\n                    }\r\n                }\r\n            }\r\n            socket.onclose = function () {\r\n                console.log(\"websocket已关闭\")\r\n            }\r\n            socket.onerror = function () {\r\n                console.log(\"websocket发生了错误\")\r\n            }\r\n        }\r\n        init()\r\n        \r\n        return () => (\r\n            <div class=\"online_box\">\r\n                    <div style=\"padding-bottom: 10px; border-bottom: 1px solid #ccc;padding-top:5px;font-weight:bold\">在线用户<span style=\"font-size: 12px\"></span></div>\r\n                    {info.users.map(user => (\r\n                        <div key={Math.random()} style=\"margin:3px\">\r\n                            <span style=\"color:white;\">{user.username}</span>\r\n                            {/* {user.username === info.chatUser ? (<span style=\"font-size: 12px;color: limegreen; margin-left: 5px\">正在聊天...</span>) : ''} */}\r\n                        </div>\r\n                    ))}\r\n            </div>\r\n        )\r\n    },\r\n\r\n})","import { defineComponent,onMounted,reactive,ref } from \"vue\";\r\nimport '../css/home.css'\r\nimport { useStore } from \"vuex\";\r\nimport { ElMessage } from \"element-plus\";\r\nimport { RouterView } from \"vue-router\";\r\nimport store from \"@/store\";\r\nimport router from \"@/router\";\r\nimport Online from \"./online\";\r\nimport { getInfoAPI, uploadAvatarAPI } from \"@/api/api\";\r\nexport default defineComponent({\r\n    setup(){\r\n        const stroe = useStore()\r\n        const quit=()=>{\r\n            stroe.state.token=''\r\n            localStorage.removeItem(\"data\")\r\n            router.replace('/')\r\n            ElMessage({\r\n                type: 'success',\r\n                message: '已退出登录'\r\n            })\r\n        }\r\n        const home = ()=>{\r\n            store.commit(\"GetActive\",0)\r\n            router.push('/home/index')\r\n        }\r\n        const release = ()=>{\r\n            store.commit(\"GetActive\",1)\r\n            router.push('/home/release')\r\n        }\r\n        let info = reactive({\r\n            avatar:null\r\n        })\r\n        const chat = ()=>{\r\n            store.commit(\"GetActive\",2)\r\n            router.push(`/home/chat`)\r\n        }\r\n        const result=reactive({\r\n            avatar:null,\r\n            id:parseInt(store.state.uid),\r\n        })\r\n        \r\n        const getInfo=async ()=>{\r\n            const {data:res}=await getInfoAPI(parseInt(store.state.uid))\r\n            info.avatar=res.data.avatar\r\n            store.commit(\"GetAvatar\",res.data.avatar)\r\n        }\r\n        onMounted(()=>{\r\n            getInfo()\r\n        })\r\n        \r\n        const uploadAvatar=async ()=>{\r\n            const {data:res}=await uploadAvatarAPI(result.avatar,result.id)\r\n            if(res.code==200){\r\n                getInfo()\r\n                return ElMessage.success(\"头像已更换\")\r\n            }\r\n            console.log(res)\r\n        }\r\n        const uploadIMG=async (e)=>{\r\n            const file=e.target.files[0]\r\n            if(file.type.substring(0,5)!=='image'){\r\n                return ElMessage.warning(\"只能上传图片！\")\r\n            }\r\n            const fileReader = new FileReader()\r\n            fileReader.readAsDataURL(file)\r\n            fileReader.onload = function () {\r\n                result.avatar=this.result\r\n                uploadAvatar()\r\n            }\r\n        }\r\n        \r\n        \r\n        return ()=>(\r\n            <div class=\"index_box\">\r\n                <div class=\"box1\">\r\n                    <div class=\"left_bar\">\r\n                        <div class=\"avatar\">\r\n                            <input type=\"file\" onInput={uploadIMG}/>\r\n                            <img src={info.avatar} />\r\n                        </div>\r\n                        <div class=\"name\">{stroe.state.username}</div>\r\n                        <ul class=\"menu\">\r\n                            <li onClick={home} class={store.state.active==0?'right_border':''}>\r\n                            <img src={require(\"../image/index.png\")} alt=\"\" />\r\n                            <p class=\"font\">广场</p>\r\n                            </li>\r\n                            <li onClick={release} class={store.state.active==1?'right_border':''}>\r\n                            <img src={require(\"../image/smil.png\")} alt=\"\" />\r\n                            <p class=\"font\">发表</p>\r\n                            </li>\r\n                            <li onClick={chat} class={store.state.active==2?'right_border':''}>\r\n                            <img src={require(\"../image/cry.png\")} alt=\"\" />\r\n                            <p class=\"font\">聊天</p>\r\n                            </li>\r\n                            <li onClick={quit}>\r\n                            <img src={require(\"../image/reset.png\")} alt=\"\" />\r\n                            <p class=\"font\">退出</p>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <RouterView></RouterView>\r\n                </div>\r\n                <Online></Online>\r\n            </div>\r\n        )\r\n    }\r\n})"],"names":["defineComponent","setup","store","useStore","info","reactive","username","state","circleUrl","user","isCollapse","users","chatUser","text","messages","content","message","class","createContent","remoteUser","nowUser","html","console","log","socketUrl","socket","WebSocket","init","onopen","onmessage","msg","data","JSON","parse","from","push","onclose","onerror","map","Math","random","stroe","quit","token","localStorage","removeItem","router","ElMessage","type","home","release","avatar","chat","result","id","parseInt","getInfo","async","res","getInfoAPI","onMounted","uploadAvatar","uploadAvatarAPI","code","uploadIMG","file","e","target","files","substring","fileReader","FileReader","readAsDataURL","onload","this","require"],"sourceRoot":""}